import type { Permissions, PermissionsInterface } from "../Permissions";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, ContractFactory, Overrides } from "ethers";
type PermissionsConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Permissions__factory extends ContractFactory {
    constructor(...args: PermissionsConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<Permissions>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): Permissions;
    connect(signer: Signer): Permissions__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061078c806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806391d148541161005b57806391d14854146100dd578063a217fddf14610100578063a32fa5b314610108578063d547741f1461011b57600080fd5b8063248a9ca3146100825780632f2ff15d146100b557806336568abe146100ca575b600080fd5b6100a2610090366004610599565b60009081526001602052604090205490565b6040519081526020015b60405180910390f35b6100c86100c33660046105b2565b61012e565b005b6100c86100d83660046105b2565b6101cb565b6100f06100eb3660046105b2565b61022d565b60405190151581526020016100ac565b6100a2600081565b6100f06101163660046105b2565b610258565b6100c86101293660046105b2565b6102aa565b60008281526001602052604090205461014790336102bf565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16156101bd5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b6101c7828261033d565b5050565b336001600160a01b038216146102235760405162461bcd60e51b815260206004820152601a60248201527f43616e206f6e6c792072656e6f756e636520666f722073656c6600000000000060448201526064016101b4565b6101c78282610396565b6000828152602081815260408083206001600160a01b038516845290915290205460ff165b92915050565b60008281526020818152604080832083805290915281205460ff166102a157506000828152602081815260408083206001600160a01b038516845290915290205460ff16610252565b50600192915050565b60008281526001602052604090205461022390335b6000828152602081815260408083206001600160a01b038516845290915290205460ff166101c7576102fb816001600160a01b031660146103f6565b6103068360206103f6565b60405160200161031792919061061e565b60408051601f198184030181529082905262461bcd60e51b82526101b491600401610693565b6000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6103a082826102bf565b6000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b606060006104058360026106dc565b6104109060026106fb565b67ffffffffffffffff81111561042857610428610713565b6040519080825280601f01601f191660200182016040528015610452576020820181803683370190505b509050600360fc1b8160008151811061046d5761046d610729565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061049c5761049c610729565b60200101906001600160f81b031916908160001a90535060006104c08460026106dc565b6104cb9060016106fb565b90505b6001811115610543576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106104ff576104ff610729565b1a60f81b82828151811061051557610515610729565b60200101906001600160f81b031916908160001a90535060049490941c9361053c8161073f565b90506104ce565b5083156105925760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016101b4565b9392505050565b6000602082840312156105ab57600080fd5b5035919050565b600080604083850312156105c557600080fd5b8235915060208301356001600160a01b03811681146105e357600080fd5b809150509250929050565b60005b838110156106095781810151838201526020016105f1565b83811115610618576000848401525b50505050565b7f5065726d697373696f6e733a206163636f756e742000000000000000000000008152600083516106568160158501602088016105ee565b7001034b99036b4b9b9b4b733903937b6329607d1b60159184019182015283516106878160268401602088016105ee565b01602601949350505050565b60208152600082518060208401526106b28160408501602087016105ee565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156106f6576106f66106c6565b500290565b6000821982111561070e5761070e6106c6565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161074e5761074e6106c6565b50600019019056fea264697066735822122079f917a106a2a87c539ae2146a77d015a5b78708a7a51cdf047e5e121dca1bfd64736f6c634300080c0033";
    static readonly abi: ({
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): PermissionsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Permissions;
}
export {};
//# sourceMappingURL=Permissions__factory.d.ts.map