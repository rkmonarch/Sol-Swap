{"version":3,"file":"BundlrStorageDriver.cjs","sources":["../../../../src/plugins/bundlrStorage/BundlrStorageDriver.ts"],"sourcesContent":["import type { default as NodeBundlr, WebBundlr } from '@bundlr-network/client';\nimport BigNumber from 'bignumber.js';\nimport {\n  Connection,\n  Keypair,\n  PublicKey,\n  SendOptions,\n  Signer as Web3Signer,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport {\n  getBytesFromMetaplexFiles,\n  MetaplexFile,\n  MetaplexFileTag,\n  StorageDriver,\n} from '../storageModule';\nimport { KeypairIdentityDriver } from '../keypairIdentity';\nimport { Metaplex } from '@/Metaplex';\nimport {\n  Amount,\n  IdentitySigner,\n  isIdentitySigner,\n  isKeypairSigner,\n  KeypairSigner,\n  lamports,\n  Signer,\n  toBigNumber,\n} from '@/types';\nimport {\n  AssetUploadFailedError,\n  BundlrWithdrawError,\n  FailedToConnectToBundlrAddressError,\n  FailedToInitializeBundlrError,\n} from '@/errors';\n\n/**\n * This method is necessary to import the Bundlr package on both ESM and CJS modules.\n * Without this, we get a different structure on each module:\n * - CJS: { default: [Getter], WebBundlr: [Getter] }\n * - ESM: { default: { default: [Getter], WebBundlr: [Getter] } }\n * This method fixes this by ensure there is not double default in the imported package.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction _removeDoubleDefault(pkg: any) {\n  if (\n    pkg &&\n    typeof pkg === 'object' &&\n    'default' in pkg &&\n    'default' in pkg.default\n  ) {\n    return pkg.default;\n  }\n\n  return pkg;\n}\n\nexport type BundlrOptions = {\n  address?: string;\n  timeout?: number;\n  providerUrl?: string;\n  priceMultiplier?: number;\n  identity?: Signer;\n};\n\nexport type BundlrWalletAdapter = {\n  publicKey: PublicKey | null;\n  signMessage?: (message: Uint8Array) => Promise<Uint8Array>;\n  signTransaction?: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions?: (transactions: Transaction[]) => Promise<Transaction[]>;\n  sendTransaction: (\n    transaction: Transaction,\n    connection: Connection,\n    options?: SendOptions & { signers?: Web3Signer[] }\n  ) => Promise<TransactionSignature>;\n};\n\n/// Size of Bundlr transaction header\nconst HEADER_SIZE = 2_000;\n\n/// Minimum file size for cost calculation\nconst MINIMUM_SIZE = 80_000;\n\nexport class BundlrStorageDriver implements StorageDriver {\n  protected _metaplex: Metaplex;\n  protected _bundlr: WebBundlr | NodeBundlr | null = null;\n  protected _options: BundlrOptions;\n\n  constructor(metaplex: Metaplex, options: BundlrOptions = {}) {\n    this._metaplex = metaplex;\n    this._options = {\n      providerUrl: metaplex.connection.rpcEndpoint,\n      ...options,\n    };\n  }\n\n  async getUploadPrice(bytes: number): Promise<Amount> {\n    const bundlr = await this.bundlr();\n    const price = await bundlr.getPrice(bytes);\n\n    return bigNumberToAmount(\n      price.multipliedBy(this._options.priceMultiplier ?? 1.1)\n    );\n  }\n\n  async getUploadPriceForFiles(files: MetaplexFile[]): Promise<Amount> {\n    const bytes: number = files.reduce((sum, file) => {\n      return sum + HEADER_SIZE + Math.max(MINIMUM_SIZE, file.buffer.byteLength);\n    }, 0);\n\n    return this.getUploadPrice(bytes);\n  }\n\n  async upload(file: MetaplexFile): Promise<string> {\n    const [uri] = await this.uploadAll([file]);\n\n    return uri;\n  }\n\n  async uploadAll(files: MetaplexFile[]): Promise<string[]> {\n    const bundlr = await this.bundlr();\n    const amount = await this.getUploadPrice(\n      getBytesFromMetaplexFiles(...files)\n    );\n    await this.fund(amount);\n\n    const promises = files.map(async (file) => {\n      const { status, data } = await bundlr.uploader.upload(file.buffer, {\n        tags: getMetaplexFileTagsWithContentType(file),\n      });\n\n      if (status >= 300) {\n        throw new AssetUploadFailedError(status);\n      }\n\n      return `https://arweave.net/${data.id}`;\n    });\n\n    return await Promise.all(promises);\n  }\n\n  async getBalance(): Promise<Amount> {\n    const bundlr = await this.bundlr();\n    const balance = await bundlr.getLoadedBalance();\n\n    return bigNumberToAmount(balance);\n  }\n\n  async fund(amount: Amount, skipBalanceCheck = false): Promise<void> {\n    const bundlr = await this.bundlr();\n    let toFund = amountToBigNumber(amount);\n\n    if (!skipBalanceCheck) {\n      const balance = await bundlr.getLoadedBalance();\n\n      toFund = toFund.isGreaterThan(balance)\n        ? toFund.minus(balance)\n        : new BigNumber(0);\n    }\n\n    if (toFund.isLessThanOrEqualTo(0)) {\n      return;\n    }\n\n    // TODO: Catch errors and wrap in BundlrErrors.\n    await bundlr.fund(toFund);\n  }\n\n  async withdrawAll(): Promise<void> {\n    // TODO(loris): Replace with \"withdrawAll\" when available on Bundlr.\n    const bundlr = await this.bundlr();\n    const balance = await bundlr.getLoadedBalance();\n    const minimumBalance = new BigNumber(5000);\n\n    if (balance.isLessThan(minimumBalance)) {\n      return;\n    }\n\n    const balanceToWithdraw = balance.minus(minimumBalance);\n    await this.withdraw(bigNumberToAmount(balanceToWithdraw));\n  }\n\n  async withdraw(amount: Amount): Promise<void> {\n    const bundlr = await this.bundlr();\n\n    const { status } = await bundlr.withdrawBalance(amountToBigNumber(amount));\n\n    if (status >= 300) {\n      throw new BundlrWithdrawError(status);\n    }\n  }\n\n  async bundlr(): Promise<WebBundlr | NodeBundlr> {\n    if (this._bundlr) {\n      return this._bundlr;\n    }\n\n    return (this._bundlr = await this.initBundlr());\n  }\n\n  async initBundlr(): Promise<WebBundlr | NodeBundlr> {\n    const currency = 'solana';\n    const address = this._options?.address ?? 'https://node1.bundlr.network';\n    const options = {\n      timeout: this._options.timeout,\n      providerUrl: this._options.providerUrl,\n    };\n\n    const identity: Signer =\n      this._options.identity ?? this._metaplex.identity();\n\n    // if in node use node bundlr, else use web bundlr\n    // see: https://github.com/metaplex-foundation/js/issues/202\n    const isNode =\n      typeof window === 'undefined' || window.process?.hasOwnProperty('type');\n    let bundlr;\n    if (isNode && isKeypairSigner(identity))\n      bundlr = await this.initNodeBundlr(address, currency, identity, options);\n    else {\n      let identitySigner: IdentitySigner;\n      if (isIdentitySigner(identity)) identitySigner = identity;\n      else\n        identitySigner = new KeypairIdentityDriver(\n          Keypair.fromSecretKey((identity as KeypairSigner).secretKey)\n        );\n\n      bundlr = await this.initWebBundlr(\n        address,\n        currency,\n        identitySigner,\n        options\n      );\n    }\n\n    try {\n      // Check for valid bundlr node.\n      await bundlr.utils.getBundlerAddress(currency);\n    } catch (error) {\n      throw new FailedToConnectToBundlrAddressError(address, error as Error);\n    }\n\n    return bundlr;\n  }\n\n  async initNodeBundlr(\n    address: string,\n    currency: string,\n    keypair: KeypairSigner,\n    options: any\n  ): Promise<NodeBundlr> {\n    const bPackage = _removeDoubleDefault(\n      await import('@bundlr-network/client')\n    );\n    return new bPackage.default(address, currency, keypair.secretKey, options);\n  }\n\n  async initWebBundlr(\n    address: string,\n    currency: string,\n    identity: IdentitySigner,\n    options: any\n  ): Promise<WebBundlr> {\n    const wallet: BundlrWalletAdapter = {\n      publicKey: identity.publicKey,\n      signMessage: (message: Uint8Array) => identity.signMessage(message),\n      signTransaction: (transaction: Transaction) =>\n        identity.signTransaction(transaction),\n      signAllTransactions: (transactions: Transaction[]) =>\n        identity.signAllTransactions(transactions),\n      sendTransaction: (\n        transaction: Transaction,\n        connection: Connection,\n        options: SendOptions & { signers?: Web3Signer[] } = {}\n      ): Promise<TransactionSignature> => {\n        const { signers = [], ...sendOptions } = options;\n\n        return this._metaplex\n          .rpc()\n          .sendTransaction(transaction, sendOptions, [identity, ...signers]);\n      },\n    };\n\n    const bPackage = _removeDoubleDefault(\n      await import('@bundlr-network/client')\n    );\n    const bundlr = new bPackage.WebBundlr(address, currency, wallet, options);\n\n    try {\n      // Try to initiate bundlr.\n      await bundlr.ready();\n    } catch (error) {\n      throw new FailedToInitializeBundlrError(error as Error);\n    }\n\n    return bundlr;\n  }\n}\n\nexport const isBundlrStorageDriver = (\n  storageDriver: StorageDriver\n): storageDriver is BundlrStorageDriver => {\n  return (\n    'bundlr' in storageDriver &&\n    'getBalance' in storageDriver &&\n    'fund' in storageDriver &&\n    'withdrawAll' in storageDriver\n  );\n};\n\nconst bigNumberToAmount = (bigNumber: BigNumber): Amount => {\n  return lamports(toBigNumber(bigNumber.decimalPlaces(0).toString()));\n};\n\nconst amountToBigNumber = (amount: Amount): BigNumber => {\n  return new BigNumber(amount.basisPoints.toString());\n};\n\nconst getMetaplexFileTagsWithContentType = (\n  file: MetaplexFile\n): MetaplexFileTag[] => {\n  if (!file.contentType) {\n    return file.tags;\n  }\n\n  return [{ name: 'Content-Type', value: file.contentType }, ...file.tags];\n};\n"],"names":["_removeDoubleDefault","pkg","default","HEADER_SIZE","MINIMUM_SIZE","BundlrStorageDriver","constructor","metaplex","options","_defineProperty","_metaplex","_options","providerUrl","connection","rpcEndpoint","getUploadPrice","bytes","bundlr","price","getPrice","bigNumberToAmount","multipliedBy","priceMultiplier","getUploadPriceForFiles","files","reduce","sum","file","Math","max","buffer","byteLength","upload","uri","uploadAll","amount","getBytesFromMetaplexFiles","fund","promises","map","status","data","uploader","tags","getMetaplexFileTagsWithContentType","AssetUploadFailedError","id","Promise","all","getBalance","balance","getLoadedBalance","skipBalanceCheck","toFund","amountToBigNumber","isGreaterThan","minus","BigNumber","isLessThanOrEqualTo","withdrawAll","minimumBalance","isLessThan","balanceToWithdraw","withdraw","withdrawBalance","BundlrWithdrawError","_bundlr","initBundlr","currency","address","timeout","identity","isNode","window","process","hasOwnProperty","isKeypairSigner","initNodeBundlr","identitySigner","isIdentitySigner","KeypairIdentityDriver","Keypair","fromSecretKey","secretKey","initWebBundlr","utils","getBundlerAddress","error","FailedToConnectToBundlrAddressError","keypair","bPackage","wallet","publicKey","signMessage","message","signTransaction","transaction","signAllTransactions","transactions","sendTransaction","signers","sendOptions","rpc","WebBundlr","ready","FailedToInitializeBundlrError","isBundlrStorageDriver","storageDriver","bigNumber","lamports","toBigNumber","decimalPlaces","toString","basisPoints","contentType","name","value"],"mappings":"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"}