import { defineProperty as _defineProperty } from '../_virtual/_rollupPluginBabelHelpers.mjs';
import { MetaplexError } from './MetaplexError.mjs';

/** @group Errors */
class BundlrError extends MetaplexError {
  constructor(message, cause) {
    super(message, 'plugin', 'Bundlr', cause);
    _defineProperty(this, "name", 'BundlrError');
  }
}

/** @group Errors */
class FailedToInitializeBundlrError extends BundlrError {
  constructor(cause) {
    const message = 'Bundlr could not be initialized. ' + 'Please check the underlying error below for more details.';
    super(message, cause);
    _defineProperty(this, "name", 'FailedToInitializeBundlrError');
  }
}

/** @group Errors */
class FailedToConnectToBundlrAddressError extends BundlrError {
  constructor(address, cause) {
    const message = `Bundlr could not connect to the provided address [${address}]. ` + 'Please ensure the provided address is valid. Some valid addresses include: ' + '"https://node1.bundlr.network" for mainnet and "https://devnet.bundlr.network" for devnet';
    super(message, cause);
    _defineProperty(this, "name", 'FailedToConnectToBundlrAddressError');
  }
}

/** @group Errors */
class AssetUploadFailedError extends BundlrError {
  constructor(status) {
    const message = `The asset could not be uploaded to the Bundlr network and ` + `returned the following status code [${status}].`;
    super(message);
    _defineProperty(this, "name", 'AssetUploadFailedError');
  }
}

/** @group Errors */
class BundlrWithdrawError extends BundlrError {
  constructor(status) {
    const message = `The balance could not be withdrawn from the Bundlr network and ` + `returned the following status code [${status}].`;
    super(message);
    _defineProperty(this, "name", 'BundlrWithdrawError');
  }
}

export { AssetUploadFailedError, BundlrError, BundlrWithdrawError, FailedToConnectToBundlrAddressError, FailedToInitializeBundlrError };
//# sourceMappingURL=BundlrError.mjs.map
